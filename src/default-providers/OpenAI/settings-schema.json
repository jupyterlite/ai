{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "disableStreaming": {
      "type": "boolean",
      "description": "Whether to disable streaming.\n\nIf streaming is bypassed, then `stream()` will defer to `invoke()`.\n\n- If true, will always bypass streaming case.\n- If false (default), will always use streaming case if available."
    },
    "logprobs": {
      "type": "boolean",
      "description": "Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the content of message."
    },
    "topLogprobs": {
      "type": "number",
      "description": "An integer between 0 and 5 specifying the number of most likely tokens to return at each token position, each with an associated log probability. logprobs must be set to true if this parameter is used."
    },
    "__includeRawResponse": {
      "type": "boolean",
      "description": "Whether to include the raw OpenAI response in the output message's \"additional_kwargs\" field. Currently in experimental beta."
    },
    "supportsStrictToolCalling": {
      "type": "boolean",
      "description": "Whether the model supports the `strict` argument when passing in tools. If `undefined` the `strict` argument will not be passed to OpenAI."
    },
    "modalities": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": ["text", "audio"]
      },
      "description": "Output types that you would like the model to generate for this request. Most models are capable of generating text, which is the default:\n\n`[\"text\"]`\n\nThe `gpt-4o-audio-preview` model can also be used to [generate audio](https://platform.openai.com/docs/guides/audio). To request that this model generate both text and audio responses, you can use:\n\n`[\"text\", \"audio\"]`"
    },
    "audio": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "enum": ["wav", "aac", "mp3", "flac", "opus", "pcm16"],
          "description": "Specifies the output audio format. Must be one of `wav`, `mp3`, `flac`, `opus`, or `pcm16`."
        },
        "voice": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "string",
              "enum": [
                "alloy",
                "ash",
                "ballad",
                "coral",
                "echo",
                "fable",
                "onyx",
                "nova",
                "sage",
                "shimmer",
                "verse"
              ]
            }
          ],
          "description": "The voice the model uses to respond. Supported voices are `alloy`, `ash`, `ballad`, `coral`, `echo`, `fable`, `nova`, `onyx`, `sage`, and `shimmer`."
        }
      },
      "required": ["format", "voice"],
      "additionalProperties": false,
      "description": "Parameters for audio output. Required when audio output is requested with `modalities: [\"audio\"]`. [Learn more](https://platform.openai.com/docs/guides/audio)."
    },
    "reasoningEffort": {
      "anyOf": [
        {
          "type": ["string", "null"],
          "enum": ["low", "medium", "high", null],
          "description": "**o-series models only**\n\nConstrains effort on reasoning for [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently supported values are `low`, `medium`, and `high`. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response."
        },
        {
          "type": "null"
        }
      ],
      "description": "Constrains effort on reasoning for reasoning models. Currently supported values are low, medium, and high. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response."
    },
    "temperature": {
      "type": "number",
      "description": "Sampling temperature to use"
    },
    "maxTokens": {
      "type": "number",
      "description": "Maximum number of tokens to generate in the completion. -1 returns as many tokens as possible given the prompt and the model's maximum context size."
    },
    "topP": {
      "type": "number",
      "description": "Total probability mass of tokens to consider at each step"
    },
    "frequencyPenalty": {
      "type": "number",
      "description": "Penalizes repeated tokens according to frequency"
    },
    "presencePenalty": {
      "type": "number",
      "description": "Penalizes repeated tokens"
    },
    "n": {
      "type": "number",
      "description": "Number of completions to generate for each prompt"
    },
    "logitBias": {
      "type": "object",
      "additionalProperties": {
        "type": "number"
      },
      "description": "Dictionary used to adjust the probability of specific tokens being generated"
    },
    "user": {
      "type": "string",
      "description": "Unique string identifier representing your end-user, which can help OpenAI to monitor and detect abuse."
    },
    "streaming": {
      "type": "boolean",
      "description": "Whether to stream the results or not. Enabling disables tokenUsage reporting"
    },
    "streamUsage": {
      "type": "boolean",
      "description": "Whether or not to include token usage data in streamed chunks.",
      "default": false
    },
    "modelName": {
      "type": "string",
      "description": "Model name to use Alias for `model`",
      "deprecated": "Use \"model\" instead."
    },
    "model": {
      "type": "string",
      "description": "Model name to use"
    },
    "modelKwargs": {
      "type": "object",
      "description": "Holds any additional parameters that are valid to pass to  {@link  * https://platform.openai.com/docs/api-reference/completions/create | }      * `openai.createCompletion`} that are not explicitly specified on this class."
    },
    "stopSequences": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of stop words to use when generating"
    },
    "timeout": {
      "type": "number",
      "description": "Timeout to use when making requests to OpenAI."
    },
    "apiKey": {
      "type": "string",
      "description": "API key to use when making requests to OpenAI. Defaults to the value of `OPENAI_API_KEY` environment variable."
    }
  },
  "definitions": {}
}
